interface BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: String!
  updatedAt: DateTime
  updatedById: String
  deletedAt: DateTime
  deletedById: String
  version: Int!
}

type BaseModel implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: String!
  updatedAt: DateTime
  updatedById: String
  deletedAt: DateTime
  deletedById: String
  version: Int!
}

type BaseModelUUID implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: String!
  updatedAt: DateTime
  updatedById: String
  deletedAt: DateTime
  deletedById: String
  version: Int!
}

input BaseWhereInput {
  id_eq: String
  id_in: [String!]
  createdAt_eq: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdById_eq: String
  updatedAt_eq: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedById_eq: String
  deletedAt_all: Boolean
  deletedAt_eq: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedById_eq: String
}

"""GraphQL representation of BigInt"""
scalar BigInt

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

interface DeleteResponse {
  id: ID!
}

type KusamaProposals implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: String!
  updatedAt: DateTime
  updatedById: String
  deletedAt: DateTime
  deletedById: String
  version: Int!
  proposalIndex: Int
  proposer: String
  beneficiary: String
  requestedAmount: String
  boundedAmount: String
  status: Status
}

type KusamaProposalsConnection {
  totalCount: Int!
  edges: [KusamaProposalsEdge!]!
  pageInfo: PageInfo!
}

input KusamaProposalsCreateInput {
  proposalIndex: Float
  proposer: String
  beneficiary: String
  requestedAmount: String
  boundedAmount: String
  status: Status
}

type KusamaProposalsEdge {
  node: KusamaProposals!
  cursor: String!
}

enum KusamaProposalsOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  proposalIndex_ASC
  proposalIndex_DESC
  proposer_ASC
  proposer_DESC
  beneficiary_ASC
  beneficiary_DESC
  requestedAmount_ASC
  requestedAmount_DESC
  boundedAmount_ASC
  boundedAmount_DESC
  status_ASC
  status_DESC
}

input KusamaProposalsUpdateInput {
  proposalIndex: Float
  proposer: String
  beneficiary: String
  requestedAmount: String
  boundedAmount: String
  status: Status
}

input KusamaProposalsWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  proposalIndex_eq: Int
  proposalIndex_gt: Int
  proposalIndex_gte: Int
  proposalIndex_lt: Int
  proposalIndex_lte: Int
  proposalIndex_in: [Int!]
  proposer_eq: String
  proposer_contains: String
  proposer_startsWith: String
  proposer_endsWith: String
  proposer_in: [String!]
  beneficiary_eq: String
  beneficiary_contains: String
  beneficiary_startsWith: String
  beneficiary_endsWith: String
  beneficiary_in: [String!]
  requestedAmount_eq: String
  requestedAmount_contains: String
  requestedAmount_startsWith: String
  requestedAmount_endsWith: String
  requestedAmount_in: [String!]
  boundedAmount_eq: String
  boundedAmount_contains: String
  boundedAmount_startsWith: String
  boundedAmount_endsWith: String
  boundedAmount_in: [String!]
  status_eq: Status
  status_in: [Status!]
  AND: [KusamaProposalsWhereInput!]
  OR: [KusamaProposalsWhereInput!]
}

input KusamaProposalsWhereUniqueInput {
  id: ID!
}

type PageInfo {
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
  endCursor: String
}

type Post implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: String!
  updatedAt: DateTime
  updatedById: String
  deletedAt: DateTime
  deletedById: String
  version: Int!
  createdByAccount: String
  createdAtBlock: BigInt
  createdAtTime: DateTime
  createdOnDay: DateTime
  postId: String!
  updatedAtTime: DateTime
  spaceId: String!
  content: String
  kind: PostKind
  parentId: String
  rootPostId: String
  sharedPostId: String
  repliesCount: Int
  publicRepliesCount: Int
  hiddenRepliesCount: Int
  sharesCount: Int
  upvotesCount: Int
  downvotesCount: Int
  score: Int
  title: String
  slug: String
  summary: String
  image: String
  canonical: String
  tagsOriginal: String
  tags: [Tag!]!
  proposalIndex: Int
}

type PostConnection {
  totalCount: Int!
  edges: [PostEdge!]!
  pageInfo: PageInfo!
}

input PostCreateInput {
  createdByAccount: String
  createdAtBlock: BigInt
  createdAtTime: DateTime
  createdOnDay: DateTime
  postId: String!
  updatedAtTime: DateTime
  spaceId: String!
  content: String
  kind: PostKind
  parentId: String
  rootPostId: String
  sharedPostId: String
  repliesCount: Float
  publicRepliesCount: Float
  hiddenRepliesCount: Float
  sharesCount: Float
  upvotesCount: Float
  downvotesCount: Float
  score: Float
  title: String
  slug: String
  summary: String
  image: String
  canonical: String
  tagsOriginal: String
  proposalIndex: Float
}

type PostEdge {
  node: Post!
  cursor: String!
}

enum PostKind {
  Comment
  SharedPost
  RegularPost
}

enum PostOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  createdByAccount_ASC
  createdByAccount_DESC
  createdAtBlock_ASC
  createdAtBlock_DESC
  createdAtTime_ASC
  createdAtTime_DESC
  createdOnDay_ASC
  createdOnDay_DESC
  postId_ASC
  postId_DESC
  updatedAtTime_ASC
  updatedAtTime_DESC
  spaceId_ASC
  spaceId_DESC
  content_ASC
  content_DESC
  kind_ASC
  kind_DESC
  parentId_ASC
  parentId_DESC
  rootPostId_ASC
  rootPostId_DESC
  sharedPostId_ASC
  sharedPostId_DESC
  repliesCount_ASC
  repliesCount_DESC
  publicRepliesCount_ASC
  publicRepliesCount_DESC
  hiddenRepliesCount_ASC
  hiddenRepliesCount_DESC
  sharesCount_ASC
  sharesCount_DESC
  upvotesCount_ASC
  upvotesCount_DESC
  downvotesCount_ASC
  downvotesCount_DESC
  score_ASC
  score_DESC
  title_ASC
  title_DESC
  slug_ASC
  slug_DESC
  summary_ASC
  summary_DESC
  image_ASC
  image_DESC
  canonical_ASC
  canonical_DESC
  tagsOriginal_ASC
  tagsOriginal_DESC
  proposalIndex_ASC
  proposalIndex_DESC
}

input PostUpdateInput {
  createdByAccount: String
  createdAtBlock: BigInt
  createdAtTime: DateTime
  createdOnDay: DateTime
  postId: String
  updatedAtTime: DateTime
  spaceId: String
  content: String
  kind: PostKind
  parentId: String
  rootPostId: String
  sharedPostId: String
  repliesCount: Float
  publicRepliesCount: Float
  hiddenRepliesCount: Float
  sharesCount: Float
  upvotesCount: Float
  downvotesCount: Float
  score: Float
  title: String
  slug: String
  summary: String
  image: String
  canonical: String
  tagsOriginal: String
  proposalIndex: Float
}

input PostWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  createdByAccount_eq: String
  createdByAccount_contains: String
  createdByAccount_startsWith: String
  createdByAccount_endsWith: String
  createdByAccount_in: [String!]
  createdAtBlock_eq: BigInt
  createdAtBlock_gt: BigInt
  createdAtBlock_gte: BigInt
  createdAtBlock_lt: BigInt
  createdAtBlock_lte: BigInt
  createdAtBlock_in: [BigInt!]
  createdAtTime_eq: DateTime
  createdAtTime_lt: DateTime
  createdAtTime_lte: DateTime
  createdAtTime_gt: DateTime
  createdAtTime_gte: DateTime
  createdOnDay_eq: DateTime
  createdOnDay_lt: DateTime
  createdOnDay_lte: DateTime
  createdOnDay_gt: DateTime
  createdOnDay_gte: DateTime
  postId_eq: String
  postId_contains: String
  postId_startsWith: String
  postId_endsWith: String
  postId_in: [String!]
  updatedAtTime_eq: DateTime
  updatedAtTime_lt: DateTime
  updatedAtTime_lte: DateTime
  updatedAtTime_gt: DateTime
  updatedAtTime_gte: DateTime
  spaceId_eq: String
  spaceId_contains: String
  spaceId_startsWith: String
  spaceId_endsWith: String
  spaceId_in: [String!]
  content_eq: String
  content_contains: String
  content_startsWith: String
  content_endsWith: String
  content_in: [String!]
  kind_eq: PostKind
  kind_in: [PostKind!]
  parentId_eq: String
  parentId_contains: String
  parentId_startsWith: String
  parentId_endsWith: String
  parentId_in: [String!]
  rootPostId_eq: String
  rootPostId_contains: String
  rootPostId_startsWith: String
  rootPostId_endsWith: String
  rootPostId_in: [String!]
  sharedPostId_eq: String
  sharedPostId_contains: String
  sharedPostId_startsWith: String
  sharedPostId_endsWith: String
  sharedPostId_in: [String!]
  repliesCount_eq: Int
  repliesCount_gt: Int
  repliesCount_gte: Int
  repliesCount_lt: Int
  repliesCount_lte: Int
  repliesCount_in: [Int!]
  publicRepliesCount_eq: Int
  publicRepliesCount_gt: Int
  publicRepliesCount_gte: Int
  publicRepliesCount_lt: Int
  publicRepliesCount_lte: Int
  publicRepliesCount_in: [Int!]
  hiddenRepliesCount_eq: Int
  hiddenRepliesCount_gt: Int
  hiddenRepliesCount_gte: Int
  hiddenRepliesCount_lt: Int
  hiddenRepliesCount_lte: Int
  hiddenRepliesCount_in: [Int!]
  sharesCount_eq: Int
  sharesCount_gt: Int
  sharesCount_gte: Int
  sharesCount_lt: Int
  sharesCount_lte: Int
  sharesCount_in: [Int!]
  upvotesCount_eq: Int
  upvotesCount_gt: Int
  upvotesCount_gte: Int
  upvotesCount_lt: Int
  upvotesCount_lte: Int
  upvotesCount_in: [Int!]
  downvotesCount_eq: Int
  downvotesCount_gt: Int
  downvotesCount_gte: Int
  downvotesCount_lt: Int
  downvotesCount_lte: Int
  downvotesCount_in: [Int!]
  score_eq: Int
  score_gt: Int
  score_gte: Int
  score_lt: Int
  score_lte: Int
  score_in: [Int!]
  title_eq: String
  title_contains: String
  title_startsWith: String
  title_endsWith: String
  title_in: [String!]
  slug_eq: String
  slug_contains: String
  slug_startsWith: String
  slug_endsWith: String
  slug_in: [String!]
  summary_eq: String
  summary_contains: String
  summary_startsWith: String
  summary_endsWith: String
  summary_in: [String!]
  image_eq: String
  image_contains: String
  image_startsWith: String
  image_endsWith: String
  image_in: [String!]
  canonical_eq: String
  canonical_contains: String
  canonical_startsWith: String
  canonical_endsWith: String
  canonical_in: [String!]
  tagsOriginal_eq: String
  tagsOriginal_contains: String
  tagsOriginal_startsWith: String
  tagsOriginal_endsWith: String
  tagsOriginal_in: [String!]
  proposalIndex_eq: Int
  proposalIndex_gt: Int
  proposalIndex_gte: Int
  proposalIndex_lt: Int
  proposalIndex_lte: Int
  proposalIndex_in: [Int!]
  tags_none: TagWhereInput
  tags_some: TagWhereInput
  tags_every: TagWhereInput
  AND: [PostWhereInput!]
  OR: [PostWhereInput!]
}

input PostWhereUniqueInput {
  id: ID!
}

type PostWithCount implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: String!
  updatedAt: DateTime
  updatedById: String
  deletedAt: DateTime
  deletedById: String
  version: Int!
  createdByAccount: String
  createdAtBlock: BigInt
  createdAtTime: DateTime
  createdOnDay: DateTime
  postId: String!
  updatedAtTime: DateTime
  spaceId: String!
  content: String
  kind: PostKind
  parentId: String
  rootPostId: String
  sharedPostId: String
  repliesCount: Int
  publicRepliesCount: Int
  hiddenRepliesCount: Int
  sharesCount: Int
  upvotesCount: Int
  downvotesCount: Int
  score: Int
  title: String
  slug: String
  summary: String
  image: String
  canonical: String
  tagsOriginal: String
  tags: [Tag!]!
  proposalIndex: Int
  totalCount: Int
}

input PostWithCountCreateInput {
  createdByAccount: String
  createdAtBlock: BigInt
  createdAtTime: DateTime
  createdOnDay: DateTime
  postId: String!
  updatedAtTime: DateTime
  spaceId: String!
  content: String
  kind: PostKind
  parentId: String
  rootPostId: String
  sharedPostId: String
  repliesCount: Float
  publicRepliesCount: Float
  hiddenRepliesCount: Float
  sharesCount: Float
  upvotesCount: Float
  downvotesCount: Float
  score: Float
  title: String
  slug: String
  summary: String
  image: String
  canonical: String
  tagsOriginal: String
  proposalIndex: Float
  totalCount: Float
}

input PostWithCountUpdateInput {
  createdByAccount: String
  createdAtBlock: BigInt
  createdAtTime: DateTime
  createdOnDay: DateTime
  postId: String
  updatedAtTime: DateTime
  spaceId: String
  content: String
  kind: PostKind
  parentId: String
  rootPostId: String
  sharedPostId: String
  repliesCount: Float
  publicRepliesCount: Float
  hiddenRepliesCount: Float
  sharesCount: Float
  upvotesCount: Float
  downvotesCount: Float
  score: Float
  title: String
  slug: String
  summary: String
  image: String
  canonical: String
  tagsOriginal: String
  proposalIndex: Float
  totalCount: Float
}

input PostWithCountWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  createdByAccount_eq: String
  createdByAccount_contains: String
  createdByAccount_startsWith: String
  createdByAccount_endsWith: String
  createdByAccount_in: [String!]
  createdAtBlock_eq: BigInt
  createdAtBlock_gt: BigInt
  createdAtBlock_gte: BigInt
  createdAtBlock_lt: BigInt
  createdAtBlock_lte: BigInt
  createdAtBlock_in: [BigInt!]
  createdAtTime_eq: DateTime
  createdAtTime_lt: DateTime
  createdAtTime_lte: DateTime
  createdAtTime_gt: DateTime
  createdAtTime_gte: DateTime
  createdOnDay_eq: DateTime
  createdOnDay_lt: DateTime
  createdOnDay_lte: DateTime
  createdOnDay_gt: DateTime
  createdOnDay_gte: DateTime
  postId_eq: String
  postId_contains: String
  postId_startsWith: String
  postId_endsWith: String
  postId_in: [String!]
  updatedAtTime_eq: DateTime
  updatedAtTime_lt: DateTime
  updatedAtTime_lte: DateTime
  updatedAtTime_gt: DateTime
  updatedAtTime_gte: DateTime
  spaceId_eq: String
  spaceId_contains: String
  spaceId_startsWith: String
  spaceId_endsWith: String
  spaceId_in: [String!]
  content_eq: String
  content_contains: String
  content_startsWith: String
  content_endsWith: String
  content_in: [String!]
  kind_eq: PostKind
  kind_in: [PostKind!]
  parentId_eq: String
  parentId_contains: String
  parentId_startsWith: String
  parentId_endsWith: String
  parentId_in: [String!]
  rootPostId_eq: String
  rootPostId_contains: String
  rootPostId_startsWith: String
  rootPostId_endsWith: String
  rootPostId_in: [String!]
  sharedPostId_eq: String
  sharedPostId_contains: String
  sharedPostId_startsWith: String
  sharedPostId_endsWith: String
  sharedPostId_in: [String!]
  repliesCount_eq: Int
  repliesCount_gt: Int
  repliesCount_gte: Int
  repliesCount_lt: Int
  repliesCount_lte: Int
  repliesCount_in: [Int!]
  publicRepliesCount_eq: Int
  publicRepliesCount_gt: Int
  publicRepliesCount_gte: Int
  publicRepliesCount_lt: Int
  publicRepliesCount_lte: Int
  publicRepliesCount_in: [Int!]
  hiddenRepliesCount_eq: Int
  hiddenRepliesCount_gt: Int
  hiddenRepliesCount_gte: Int
  hiddenRepliesCount_lt: Int
  hiddenRepliesCount_lte: Int
  hiddenRepliesCount_in: [Int!]
  sharesCount_eq: Int
  sharesCount_gt: Int
  sharesCount_gte: Int
  sharesCount_lt: Int
  sharesCount_lte: Int
  sharesCount_in: [Int!]
  upvotesCount_eq: Int
  upvotesCount_gt: Int
  upvotesCount_gte: Int
  upvotesCount_lt: Int
  upvotesCount_lte: Int
  upvotesCount_in: [Int!]
  downvotesCount_eq: Int
  downvotesCount_gt: Int
  downvotesCount_gte: Int
  downvotesCount_lt: Int
  downvotesCount_lte: Int
  downvotesCount_in: [Int!]
  score_eq: Int
  score_gt: Int
  score_gte: Int
  score_lt: Int
  score_lte: Int
  score_in: [Int!]
  title_eq: String
  title_contains: String
  title_startsWith: String
  title_endsWith: String
  title_in: [String!]
  slug_eq: String
  slug_contains: String
  slug_startsWith: String
  slug_endsWith: String
  slug_in: [String!]
  summary_eq: String
  summary_contains: String
  summary_startsWith: String
  summary_endsWith: String
  summary_in: [String!]
  image_eq: String
  image_contains: String
  image_startsWith: String
  image_endsWith: String
  image_in: [String!]
  canonical_eq: String
  canonical_contains: String
  canonical_startsWith: String
  canonical_endsWith: String
  canonical_in: [String!]
  tagsOriginal_eq: String
  tagsOriginal_contains: String
  tagsOriginal_startsWith: String
  tagsOriginal_endsWith: String
  tagsOriginal_in: [String!]
  proposalIndex_eq: Int
  proposalIndex_gt: Int
  proposalIndex_gte: Int
  proposalIndex_lt: Int
  proposalIndex_lte: Int
  proposalIndex_in: [Int!]
  tags_none: TagWhereInput
  tags_some: TagWhereInput
  tags_every: TagWhereInput
  AND: [PostWithCountWhereInput!]
  OR: [PostWithCountWhereInput!]
  totalCount_eq: Int
  totalCount_gt: Int
  totalCount_gte: Int
  totalCount_lt: Int
  totalCount_lte: Int
  totalCount_in: [Int!]
}

input PostWithCountWhereUniqueInput {
  id: ID!
}

type ProcessorState {
  lastCompleteBlock: Float!
  lastProcessedEvent: String!
  indexerHead: Float!
  chainHead: Float!
}

type Query {
  kusamaProposals(offset: Int, limit: Int = 50, where: KusamaProposalsWhereInput, orderBy: [KusamaProposalsOrderByInput!]): [KusamaProposals!]!
  kusamaProposalsByUniqueInput(where: KusamaProposalsWhereUniqueInput!): KusamaProposals
  kusamaProposalsConnection(first: Int, after: String, last: Int, before: String, where: KusamaProposalsWhereInput, orderBy: [KusamaProposalsOrderByInput!]): KusamaProposalsConnection!
  posts(offset: Int, limit: Int = 50, where: PostWhereInput, orderBy: [PostOrderByInput!]): [Post!]!
  postByUniqueInput(where: PostWhereUniqueInput!): Post
  postsConnection(first: Int, after: String, last: Int, before: String, where: PostWhereInput, orderBy: [PostOrderByInput!]): PostConnection!
  postWithProposal(offset: Int, limit: Int = 50, where: PostWhereInput, proposalWhere: KusamaProposalsWhereInput, network: String, proposalIndex: Int, orderBy: [PostOrderByInput!]): [PostWithCount!]!
  postsWithSubnet(offset: Int, limit: Int = 50, where: PostWhereInput, subnetId: String, orderBy: [PostOrderByInput!]): [Post!]!
  spaces(offset: Int, limit: Int = 50, where: SpaceWhereInput, orderBy: [SpaceOrderByInput!]): [Space!]!
  spaceByUniqueInput(where: SpaceWhereUniqueInput!): Space
  spacesConnection(first: Int, after: String, last: Int, before: String, where: SpaceWhereInput, orderBy: [SpaceOrderByInput!]): SpaceConnection!
  spacesWithSubnet(offset: Int, limit: Int = 50, where: SpaceWhereInput, subnetId: String, orderBy: [SpaceOrderByInput!]): [Space!]!
  tags(offset: Int, limit: Int = 50, where: TagWhereInput, orderBy: [TagOrderByInput!]): [Tag!]!
  tagByUniqueInput(where: TagWhereUniqueInput!): Tag
  tagsConnection(first: Int, after: String, last: Int, before: String, where: TagWhereInput, orderBy: [TagOrderByInput!]): TagConnection!
}

type Space implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: String!
  updatedAt: DateTime
  updatedById: String
  deletedAt: DateTime
  deletedById: String
  version: Int!
  createdByAccount: String
  createdAtBlock: BigInt
  createdAtTime: DateTime
  createdOnDay: DateTime
  spaceId: String!
  updatedAtTime: DateTime
  ownerId: String
  postsCount: Int
  publicPostsCount: Int
  hiddenPostsCount: Int
  followersCount: Int
  score: Int
  content: String
  name: String
  image: String
  summary: String
  tagsOriginal: String
  tags: [Tag!]!
}

type SpaceConnection {
  totalCount: Int!
  edges: [SpaceEdge!]!
  pageInfo: PageInfo!
}

input SpaceCreateInput {
  createdByAccount: String
  createdAtBlock: BigInt
  createdAtTime: DateTime
  createdOnDay: DateTime
  spaceId: String!
  updatedAtTime: DateTime
  ownerId: String
  postsCount: Float
  publicPostsCount: Float
  hiddenPostsCount: Float
  followersCount: Float
  score: Float
  content: String
  name: String
  image: String
  summary: String
  tagsOriginal: String
}

type SpaceEdge {
  node: Space!
  cursor: String!
}

enum SpaceOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  createdByAccount_ASC
  createdByAccount_DESC
  createdAtBlock_ASC
  createdAtBlock_DESC
  createdAtTime_ASC
  createdAtTime_DESC
  createdOnDay_ASC
  createdOnDay_DESC
  spaceId_ASC
  spaceId_DESC
  updatedAtTime_ASC
  updatedAtTime_DESC
  ownerId_ASC
  ownerId_DESC
  postsCount_ASC
  postsCount_DESC
  publicPostsCount_ASC
  publicPostsCount_DESC
  hiddenPostsCount_ASC
  hiddenPostsCount_DESC
  followersCount_ASC
  followersCount_DESC
  score_ASC
  score_DESC
  content_ASC
  content_DESC
  name_ASC
  name_DESC
  image_ASC
  image_DESC
  summary_ASC
  summary_DESC
  tagsOriginal_ASC
  tagsOriginal_DESC
}

input SpaceUpdateInput {
  createdByAccount: String
  createdAtBlock: BigInt
  createdAtTime: DateTime
  createdOnDay: DateTime
  spaceId: String
  updatedAtTime: DateTime
  ownerId: String
  postsCount: Float
  publicPostsCount: Float
  hiddenPostsCount: Float
  followersCount: Float
  score: Float
  content: String
  name: String
  image: String
  summary: String
  tagsOriginal: String
}

input SpaceWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  createdByAccount_eq: String
  createdByAccount_contains: String
  createdByAccount_startsWith: String
  createdByAccount_endsWith: String
  createdByAccount_in: [String!]
  createdAtBlock_eq: BigInt
  createdAtBlock_gt: BigInt
  createdAtBlock_gte: BigInt
  createdAtBlock_lt: BigInt
  createdAtBlock_lte: BigInt
  createdAtBlock_in: [BigInt!]
  createdAtTime_eq: DateTime
  createdAtTime_lt: DateTime
  createdAtTime_lte: DateTime
  createdAtTime_gt: DateTime
  createdAtTime_gte: DateTime
  createdOnDay_eq: DateTime
  createdOnDay_lt: DateTime
  createdOnDay_lte: DateTime
  createdOnDay_gt: DateTime
  createdOnDay_gte: DateTime
  spaceId_eq: String
  spaceId_contains: String
  spaceId_startsWith: String
  spaceId_endsWith: String
  spaceId_in: [String!]
  updatedAtTime_eq: DateTime
  updatedAtTime_lt: DateTime
  updatedAtTime_lte: DateTime
  updatedAtTime_gt: DateTime
  updatedAtTime_gte: DateTime
  ownerId_eq: String
  ownerId_contains: String
  ownerId_startsWith: String
  ownerId_endsWith: String
  ownerId_in: [String!]
  postsCount_eq: Int
  postsCount_gt: Int
  postsCount_gte: Int
  postsCount_lt: Int
  postsCount_lte: Int
  postsCount_in: [Int!]
  publicPostsCount_eq: Int
  publicPostsCount_gt: Int
  publicPostsCount_gte: Int
  publicPostsCount_lt: Int
  publicPostsCount_lte: Int
  publicPostsCount_in: [Int!]
  hiddenPostsCount_eq: Int
  hiddenPostsCount_gt: Int
  hiddenPostsCount_gte: Int
  hiddenPostsCount_lt: Int
  hiddenPostsCount_lte: Int
  hiddenPostsCount_in: [Int!]
  followersCount_eq: Int
  followersCount_gt: Int
  followersCount_gte: Int
  followersCount_lt: Int
  followersCount_lte: Int
  followersCount_in: [Int!]
  score_eq: Int
  score_gt: Int
  score_gte: Int
  score_lt: Int
  score_lte: Int
  score_in: [Int!]
  content_eq: String
  content_contains: String
  content_startsWith: String
  content_endsWith: String
  content_in: [String!]
  name_eq: String
  name_contains: String
  name_startsWith: String
  name_endsWith: String
  name_in: [String!]
  image_eq: String
  image_contains: String
  image_startsWith: String
  image_endsWith: String
  image_in: [String!]
  summary_eq: String
  summary_contains: String
  summary_startsWith: String
  summary_endsWith: String
  summary_in: [String!]
  tagsOriginal_eq: String
  tagsOriginal_contains: String
  tagsOriginal_startsWith: String
  tagsOriginal_endsWith: String
  tagsOriginal_in: [String!]
  tags_none: TagWhereInput
  tags_some: TagWhereInput
  tags_every: TagWhereInput
  AND: [SpaceWhereInput!]
  OR: [SpaceWhereInput!]
}

input SpaceWhereUniqueInput {
  id: ID!
}

type StandardDeleteResponse {
  id: ID!
}

enum Status {
  Awarded
  Proposed
  Rejected
}

type Subscription {
  stateSubscription: ProcessorState!
}

type Tag implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: String!
  updatedAt: DateTime
  updatedById: String
  deletedAt: DateTime
  deletedById: String
  version: Int!
  tag: String
  posts: [Post!]!
  spaces: [Space!]!
}

type TagConnection {
  totalCount: Int!
  edges: [TagEdge!]!
  pageInfo: PageInfo!
}

input TagCreateInput {
  tag: String
}

type TagEdge {
  node: Tag!
  cursor: String!
}

enum TagOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  tag_ASC
  tag_DESC
}

input TagUpdateInput {
  tag: String
}

input TagWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  tag_eq: String
  tag_contains: String
  tag_startsWith: String
  tag_endsWith: String
  tag_in: [String!]
  posts_none: PostWhereInput
  posts_some: PostWhereInput
  posts_every: PostWhereInput
  spaces_none: SpaceWhereInput
  spaces_some: SpaceWhereInput
  spaces_every: SpaceWhereInput
  AND: [TagWhereInput!]
  OR: [TagWhereInput!]
}

input TagWhereUniqueInput {
  id: ID!
}
