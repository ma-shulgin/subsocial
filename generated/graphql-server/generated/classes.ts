// This file has been auto-generated by Warthog.  Do not update directly as it
// will be re-written.  If you need to change this file, update models or add
// new TypeGraphQL objects
// prettier-ignore
// @ts-ignore
import { DateResolver as Date } from 'graphql-scalars';
// prettier-ignore
// @ts-ignore
import { GraphQLID as ID } from 'graphql';
// prettier-ignore
// @ts-ignore
import { ArgsType, Field as TypeGraphQLField, Float, InputType as TypeGraphQLInputType, Int } from 'type-graphql';
// prettier-ignore
// @ts-ignore
import { registerEnumType, GraphQLISODateTime as DateTime } from "type-graphql";

import * as BN from "bn.js";

// prettier-ignore
// @ts-ignore eslint-disable-next-line @typescript-eslint/no-var-requires
const { GraphQLJSONObject } = require('graphql-type-json');
// prettier-ignore
// @ts-ignore
import { BaseWhereInput, JsonObject, PaginationArgs, DateOnlyString, DateTimeString, BigInt, Bytes } from 'warthog';

import { PostKind } from "../src/modules/post/post.model";

// @ts-ignore
import { Space } from "../src/modules/space/space.model";
// @ts-ignore
import { Tag } from "../src/modules/tag/tag.model";
// @ts-ignore
import { Post } from "../src/modules/post/post.model";

export enum SpaceOrderByEnum {
  createdAt_ASC = "createdAt_ASC",
  createdAt_DESC = "createdAt_DESC",

  updatedAt_ASC = "updatedAt_ASC",
  updatedAt_DESC = "updatedAt_DESC",

  deletedAt_ASC = "deletedAt_ASC",
  deletedAt_DESC = "deletedAt_DESC",

  createdByAccount_ASC = "createdByAccount_ASC",
  createdByAccount_DESC = "createdByAccount_DESC",

  createdAtBlock_ASC = "createdAtBlock_ASC",
  createdAtBlock_DESC = "createdAtBlock_DESC",

  createdAtTime_ASC = "createdAtTime_ASC",
  createdAtTime_DESC = "createdAtTime_DESC",

  createdOnDay_ASC = "createdOnDay_ASC",
  createdOnDay_DESC = "createdOnDay_DESC",

  spaceId_ASC = "spaceId_ASC",
  spaceId_DESC = "spaceId_DESC",

  updatedAtTime_ASC = "updatedAtTime_ASC",
  updatedAtTime_DESC = "updatedAtTime_DESC",

  ownerId_ASC = "ownerId_ASC",
  ownerId_DESC = "ownerId_DESC",

  postsCount_ASC = "postsCount_ASC",
  postsCount_DESC = "postsCount_DESC",

  publicPostsCount_ASC = "publicPostsCount_ASC",
  publicPostsCount_DESC = "publicPostsCount_DESC",

  hiddenPostsCount_ASC = "hiddenPostsCount_ASC",
  hiddenPostsCount_DESC = "hiddenPostsCount_DESC",

  followersCount_ASC = "followersCount_ASC",
  followersCount_DESC = "followersCount_DESC",

  score_ASC = "score_ASC",
  score_DESC = "score_DESC",

  content_ASC = "content_ASC",
  content_DESC = "content_DESC",

  name_ASC = "name_ASC",
  name_DESC = "name_DESC",

  image_ASC = "image_ASC",
  image_DESC = "image_DESC",

  summary_ASC = "summary_ASC",
  summary_DESC = "summary_DESC",

  tagsOriginal_ASC = "tagsOriginal_ASC",
  tagsOriginal_DESC = "tagsOriginal_DESC"
}

registerEnumType(SpaceOrderByEnum, {
  name: "SpaceOrderByInput"
});

@TypeGraphQLInputType()
export class SpaceWhereInput {
  @TypeGraphQLField(() => ID, { nullable: true })
  id_eq?: string;

  @TypeGraphQLField(() => [ID], { nullable: true })
  id_in?: string[];

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_eq?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_lt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_lte?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_gt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_gte?: Date;

  @TypeGraphQLField(() => ID, { nullable: true })
  createdById_eq?: string;

  @TypeGraphQLField(() => [ID], { nullable: true })
  createdById_in?: string[];

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_eq?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_lt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_lte?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_gt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_gte?: Date;

  @TypeGraphQLField(() => ID, { nullable: true })
  updatedById_eq?: string;

  @TypeGraphQLField(() => [ID], { nullable: true })
  updatedById_in?: string[];

  @TypeGraphQLField({ nullable: true })
  deletedAt_all?: Boolean;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_eq?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_lt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_lte?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_gt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_gte?: Date;

  @TypeGraphQLField(() => ID, { nullable: true })
  deletedById_eq?: string;

  @TypeGraphQLField(() => [ID], { nullable: true })
  deletedById_in?: string[];

  @TypeGraphQLField({ nullable: true })
  createdByAccount_eq?: string;

  @TypeGraphQLField({ nullable: true })
  createdByAccount_contains?: string;

  @TypeGraphQLField({ nullable: true })
  createdByAccount_startsWith?: string;

  @TypeGraphQLField({ nullable: true })
  createdByAccount_endsWith?: string;

  @TypeGraphQLField(() => [String], { nullable: true })
  createdByAccount_in?: string[];

  @TypeGraphQLField(() => BigInt, { nullable: true })
  createdAtBlock_eq?: BN;

  @TypeGraphQLField(() => BigInt, { nullable: true })
  createdAtBlock_gt?: BN;

  @TypeGraphQLField(() => BigInt, { nullable: true })
  createdAtBlock_gte?: BN;

  @TypeGraphQLField(() => BigInt, { nullable: true })
  createdAtBlock_lt?: BN;

  @TypeGraphQLField(() => BigInt, { nullable: true })
  createdAtBlock_lte?: BN;

  @TypeGraphQLField(() => [BigInt], { nullable: true })
  createdAtBlock_in?: BN[];

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAtTime_eq?: DateTimeString;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAtTime_lt?: DateTimeString;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAtTime_lte?: DateTimeString;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAtTime_gt?: DateTimeString;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAtTime_gte?: DateTimeString;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdOnDay_eq?: DateTimeString;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdOnDay_lt?: DateTimeString;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdOnDay_lte?: DateTimeString;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdOnDay_gt?: DateTimeString;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdOnDay_gte?: DateTimeString;

  @TypeGraphQLField({ nullable: true })
  spaceId_eq?: string;

  @TypeGraphQLField({ nullable: true })
  spaceId_contains?: string;

  @TypeGraphQLField({ nullable: true })
  spaceId_startsWith?: string;

  @TypeGraphQLField({ nullable: true })
  spaceId_endsWith?: string;

  @TypeGraphQLField(() => [String], { nullable: true })
  spaceId_in?: string[];

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAtTime_eq?: DateTimeString;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAtTime_lt?: DateTimeString;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAtTime_lte?: DateTimeString;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAtTime_gt?: DateTimeString;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAtTime_gte?: DateTimeString;

  @TypeGraphQLField({ nullable: true })
  ownerId_eq?: string;

  @TypeGraphQLField({ nullable: true })
  ownerId_contains?: string;

  @TypeGraphQLField({ nullable: true })
  ownerId_startsWith?: string;

  @TypeGraphQLField({ nullable: true })
  ownerId_endsWith?: string;

  @TypeGraphQLField(() => [String], { nullable: true })
  ownerId_in?: string[];

  @TypeGraphQLField(() => Int, { nullable: true })
  postsCount_eq?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  postsCount_gt?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  postsCount_gte?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  postsCount_lt?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  postsCount_lte?: number;

  @TypeGraphQLField(() => [Int], { nullable: true })
  postsCount_in?: number[];

  @TypeGraphQLField(() => Int, { nullable: true })
  publicPostsCount_eq?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  publicPostsCount_gt?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  publicPostsCount_gte?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  publicPostsCount_lt?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  publicPostsCount_lte?: number;

  @TypeGraphQLField(() => [Int], { nullable: true })
  publicPostsCount_in?: number[];

  @TypeGraphQLField(() => Int, { nullable: true })
  hiddenPostsCount_eq?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  hiddenPostsCount_gt?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  hiddenPostsCount_gte?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  hiddenPostsCount_lt?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  hiddenPostsCount_lte?: number;

  @TypeGraphQLField(() => [Int], { nullable: true })
  hiddenPostsCount_in?: number[];

  @TypeGraphQLField(() => Int, { nullable: true })
  followersCount_eq?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  followersCount_gt?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  followersCount_gte?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  followersCount_lt?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  followersCount_lte?: number;

  @TypeGraphQLField(() => [Int], { nullable: true })
  followersCount_in?: number[];

  @TypeGraphQLField(() => Int, { nullable: true })
  score_eq?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  score_gt?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  score_gte?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  score_lt?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  score_lte?: number;

  @TypeGraphQLField(() => [Int], { nullable: true })
  score_in?: number[];

  @TypeGraphQLField({ nullable: true })
  content_eq?: string;

  @TypeGraphQLField({ nullable: true })
  content_contains?: string;

  @TypeGraphQLField({ nullable: true })
  content_startsWith?: string;

  @TypeGraphQLField({ nullable: true })
  content_endsWith?: string;

  @TypeGraphQLField(() => [String], { nullable: true })
  content_in?: string[];

  @TypeGraphQLField({ nullable: true })
  name_eq?: string;

  @TypeGraphQLField({ nullable: true })
  name_contains?: string;

  @TypeGraphQLField({ nullable: true })
  name_startsWith?: string;

  @TypeGraphQLField({ nullable: true })
  name_endsWith?: string;

  @TypeGraphQLField(() => [String], { nullable: true })
  name_in?: string[];

  @TypeGraphQLField({ nullable: true })
  image_eq?: string;

  @TypeGraphQLField({ nullable: true })
  image_contains?: string;

  @TypeGraphQLField({ nullable: true })
  image_startsWith?: string;

  @TypeGraphQLField({ nullable: true })
  image_endsWith?: string;

  @TypeGraphQLField(() => [String], { nullable: true })
  image_in?: string[];

  @TypeGraphQLField({ nullable: true })
  summary_eq?: string;

  @TypeGraphQLField({ nullable: true })
  summary_contains?: string;

  @TypeGraphQLField({ nullable: true })
  summary_startsWith?: string;

  @TypeGraphQLField({ nullable: true })
  summary_endsWith?: string;

  @TypeGraphQLField(() => [String], { nullable: true })
  summary_in?: string[];

  @TypeGraphQLField({ nullable: true })
  tagsOriginal_eq?: string;

  @TypeGraphQLField({ nullable: true })
  tagsOriginal_contains?: string;

  @TypeGraphQLField({ nullable: true })
  tagsOriginal_startsWith?: string;

  @TypeGraphQLField({ nullable: true })
  tagsOriginal_endsWith?: string;

  @TypeGraphQLField(() => [String], { nullable: true })
  tagsOriginal_in?: string[];

  @TypeGraphQLField(() => TagWhereInput, { nullable: true })
  tags_none?: TagWhereInput;

  @TypeGraphQLField(() => TagWhereInput, { nullable: true })
  tags_some?: TagWhereInput;

  @TypeGraphQLField(() => TagWhereInput, { nullable: true })
  tags_every?: TagWhereInput;

  @TypeGraphQLField(() => SpaceWhereInput, { nullable: true })
  AND?: [SpaceWhereInput];

  @TypeGraphQLField(() => SpaceWhereInput, { nullable: true })
  OR?: [SpaceWhereInput];
}

@TypeGraphQLInputType()
export class SpaceWhereUniqueInput {
  @TypeGraphQLField(() => ID)
  id?: string;
}

@TypeGraphQLInputType()
export class SpaceCreateInput {
  @TypeGraphQLField({ nullable: true })
  createdByAccount?: string;

  @TypeGraphQLField(() => BigInt, { nullable: true })
  createdAtBlock?: BN;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAtTime?: DateTimeString;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdOnDay?: DateTimeString;

  @TypeGraphQLField()
  spaceId!: string;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAtTime?: DateTimeString;

  @TypeGraphQLField({ nullable: true })
  ownerId?: string;

  @TypeGraphQLField({ nullable: true })
  postsCount?: number;

  @TypeGraphQLField({ nullable: true })
  publicPostsCount?: number;

  @TypeGraphQLField({ nullable: true })
  hiddenPostsCount?: number;

  @TypeGraphQLField({ nullable: true })
  followersCount?: number;

  @TypeGraphQLField({ nullable: true })
  score?: number;

  @TypeGraphQLField({ nullable: true })
  content?: string;

  @TypeGraphQLField({ nullable: true })
  name?: string;

  @TypeGraphQLField({ nullable: true })
  image?: string;

  @TypeGraphQLField({ nullable: true })
  summary?: string;

  @TypeGraphQLField({ nullable: true })
  tagsOriginal?: string;
}

@TypeGraphQLInputType()
export class SpaceUpdateInput {
  @TypeGraphQLField({ nullable: true })
  createdByAccount?: string;

  @TypeGraphQLField(() => BigInt, { nullable: true })
  createdAtBlock?: BN;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAtTime?: DateTimeString;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdOnDay?: DateTimeString;

  @TypeGraphQLField({ nullable: true })
  spaceId?: string;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAtTime?: DateTimeString;

  @TypeGraphQLField({ nullable: true })
  ownerId?: string;

  @TypeGraphQLField({ nullable: true })
  postsCount?: number;

  @TypeGraphQLField({ nullable: true })
  publicPostsCount?: number;

  @TypeGraphQLField({ nullable: true })
  hiddenPostsCount?: number;

  @TypeGraphQLField({ nullable: true })
  followersCount?: number;

  @TypeGraphQLField({ nullable: true })
  score?: number;

  @TypeGraphQLField({ nullable: true })
  content?: string;

  @TypeGraphQLField({ nullable: true })
  name?: string;

  @TypeGraphQLField({ nullable: true })
  image?: string;

  @TypeGraphQLField({ nullable: true })
  summary?: string;

  @TypeGraphQLField({ nullable: true })
  tagsOriginal?: string;
}

@ArgsType()
export class SpaceWhereArgs extends PaginationArgs {
  @TypeGraphQLField(() => SpaceWhereInput, { nullable: true })
  where?: SpaceWhereInput;

  @TypeGraphQLField(() => SpaceOrderByEnum, { nullable: true })
  orderBy?: SpaceOrderByEnum[];
}

@ArgsType()
export class SpaceCreateManyArgs {
  @TypeGraphQLField(() => [SpaceCreateInput])
  data!: SpaceCreateInput[];
}

@ArgsType()
export class SpaceUpdateArgs {
  @TypeGraphQLField() data!: SpaceUpdateInput;
  @TypeGraphQLField() where!: SpaceWhereUniqueInput;
}

export enum TagOrderByEnum {
  createdAt_ASC = "createdAt_ASC",
  createdAt_DESC = "createdAt_DESC",

  updatedAt_ASC = "updatedAt_ASC",
  updatedAt_DESC = "updatedAt_DESC",

  deletedAt_ASC = "deletedAt_ASC",
  deletedAt_DESC = "deletedAt_DESC",

  tag_ASC = "tag_ASC",
  tag_DESC = "tag_DESC"
}

registerEnumType(TagOrderByEnum, {
  name: "TagOrderByInput"
});

@TypeGraphQLInputType()
export class TagWhereInput {
  @TypeGraphQLField(() => ID, { nullable: true })
  id_eq?: string;

  @TypeGraphQLField(() => [ID], { nullable: true })
  id_in?: string[];

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_eq?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_lt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_lte?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_gt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_gte?: Date;

  @TypeGraphQLField(() => ID, { nullable: true })
  createdById_eq?: string;

  @TypeGraphQLField(() => [ID], { nullable: true })
  createdById_in?: string[];

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_eq?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_lt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_lte?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_gt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_gte?: Date;

  @TypeGraphQLField(() => ID, { nullable: true })
  updatedById_eq?: string;

  @TypeGraphQLField(() => [ID], { nullable: true })
  updatedById_in?: string[];

  @TypeGraphQLField({ nullable: true })
  deletedAt_all?: Boolean;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_eq?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_lt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_lte?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_gt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_gte?: Date;

  @TypeGraphQLField(() => ID, { nullable: true })
  deletedById_eq?: string;

  @TypeGraphQLField(() => [ID], { nullable: true })
  deletedById_in?: string[];

  @TypeGraphQLField({ nullable: true })
  tag_eq?: string;

  @TypeGraphQLField({ nullable: true })
  tag_contains?: string;

  @TypeGraphQLField({ nullable: true })
  tag_startsWith?: string;

  @TypeGraphQLField({ nullable: true })
  tag_endsWith?: string;

  @TypeGraphQLField(() => [String], { nullable: true })
  tag_in?: string[];

  @TypeGraphQLField(() => PostWhereInput, { nullable: true })
  posts_none?: PostWhereInput;

  @TypeGraphQLField(() => PostWhereInput, { nullable: true })
  posts_some?: PostWhereInput;

  @TypeGraphQLField(() => PostWhereInput, { nullable: true })
  posts_every?: PostWhereInput;

  @TypeGraphQLField(() => SpaceWhereInput, { nullable: true })
  spaces_none?: SpaceWhereInput;

  @TypeGraphQLField(() => SpaceWhereInput, { nullable: true })
  spaces_some?: SpaceWhereInput;

  @TypeGraphQLField(() => SpaceWhereInput, { nullable: true })
  spaces_every?: SpaceWhereInput;

  @TypeGraphQLField(() => TagWhereInput, { nullable: true })
  AND?: [TagWhereInput];

  @TypeGraphQLField(() => TagWhereInput, { nullable: true })
  OR?: [TagWhereInput];
}

@TypeGraphQLInputType()
export class TagWhereUniqueInput {
  @TypeGraphQLField(() => ID)
  id?: string;
}

@TypeGraphQLInputType()
export class TagCreateInput {
  @TypeGraphQLField({ nullable: true })
  tag?: string;
}

@TypeGraphQLInputType()
export class TagUpdateInput {
  @TypeGraphQLField({ nullable: true })
  tag?: string;
}

@ArgsType()
export class TagWhereArgs extends PaginationArgs {
  @TypeGraphQLField(() => TagWhereInput, { nullable: true })
  where?: TagWhereInput;

  @TypeGraphQLField(() => TagOrderByEnum, { nullable: true })
  orderBy?: TagOrderByEnum[];
}

@ArgsType()
export class TagCreateManyArgs {
  @TypeGraphQLField(() => [TagCreateInput])
  data!: TagCreateInput[];
}

@ArgsType()
export class TagUpdateArgs {
  @TypeGraphQLField() data!: TagUpdateInput;
  @TypeGraphQLField() where!: TagWhereUniqueInput;
}

export enum PostOrderByEnum {
  createdAt_ASC = "createdAt_ASC",
  createdAt_DESC = "createdAt_DESC",

  updatedAt_ASC = "updatedAt_ASC",
  updatedAt_DESC = "updatedAt_DESC",

  deletedAt_ASC = "deletedAt_ASC",
  deletedAt_DESC = "deletedAt_DESC",

  createdByAccount_ASC = "createdByAccount_ASC",
  createdByAccount_DESC = "createdByAccount_DESC",

  createdAtBlock_ASC = "createdAtBlock_ASC",
  createdAtBlock_DESC = "createdAtBlock_DESC",

  createdAtTime_ASC = "createdAtTime_ASC",
  createdAtTime_DESC = "createdAtTime_DESC",

  createdOnDay_ASC = "createdOnDay_ASC",
  createdOnDay_DESC = "createdOnDay_DESC",

  postId_ASC = "postId_ASC",
  postId_DESC = "postId_DESC",

  updatedAtTime_ASC = "updatedAtTime_ASC",
  updatedAtTime_DESC = "updatedAtTime_DESC",

  spaceId_ASC = "spaceId_ASC",
  spaceId_DESC = "spaceId_DESC",

  content_ASC = "content_ASC",
  content_DESC = "content_DESC",

  kind_ASC = "kind_ASC",
  kind_DESC = "kind_DESC",

  parentId_ASC = "parentId_ASC",
  parentId_DESC = "parentId_DESC",

  rootPostId_ASC = "rootPostId_ASC",
  rootPostId_DESC = "rootPostId_DESC",

  sharedPostId_ASC = "sharedPostId_ASC",
  sharedPostId_DESC = "sharedPostId_DESC",

  repliesCount_ASC = "repliesCount_ASC",
  repliesCount_DESC = "repliesCount_DESC",

  publicRepliesCount_ASC = "publicRepliesCount_ASC",
  publicRepliesCount_DESC = "publicRepliesCount_DESC",

  hiddenRepliesCount_ASC = "hiddenRepliesCount_ASC",
  hiddenRepliesCount_DESC = "hiddenRepliesCount_DESC",

  sharesCount_ASC = "sharesCount_ASC",
  sharesCount_DESC = "sharesCount_DESC",

  upvotesCount_ASC = "upvotesCount_ASC",
  upvotesCount_DESC = "upvotesCount_DESC",

  downvotesCount_ASC = "downvotesCount_ASC",
  downvotesCount_DESC = "downvotesCount_DESC",

  score_ASC = "score_ASC",
  score_DESC = "score_DESC",

  title_ASC = "title_ASC",
  title_DESC = "title_DESC",

  slug_ASC = "slug_ASC",
  slug_DESC = "slug_DESC",

  summary_ASC = "summary_ASC",
  summary_DESC = "summary_DESC",

  image_ASC = "image_ASC",
  image_DESC = "image_DESC",

  canonical_ASC = "canonical_ASC",
  canonical_DESC = "canonical_DESC",

  tagsOriginal_ASC = "tagsOriginal_ASC",
  tagsOriginal_DESC = "tagsOriginal_DESC"
}

registerEnumType(PostOrderByEnum, {
  name: "PostOrderByInput"
});

@TypeGraphQLInputType()
export class PostWhereInput {
  @TypeGraphQLField(() => ID, { nullable: true })
  id_eq?: string;

  @TypeGraphQLField(() => [ID], { nullable: true })
  id_in?: string[];

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_eq?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_lt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_lte?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_gt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_gte?: Date;

  @TypeGraphQLField(() => ID, { nullable: true })
  createdById_eq?: string;

  @TypeGraphQLField(() => [ID], { nullable: true })
  createdById_in?: string[];

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_eq?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_lt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_lte?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_gt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_gte?: Date;

  @TypeGraphQLField(() => ID, { nullable: true })
  updatedById_eq?: string;

  @TypeGraphQLField(() => [ID], { nullable: true })
  updatedById_in?: string[];

  @TypeGraphQLField({ nullable: true })
  deletedAt_all?: Boolean;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_eq?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_lt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_lte?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_gt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_gte?: Date;

  @TypeGraphQLField(() => ID, { nullable: true })
  deletedById_eq?: string;

  @TypeGraphQLField(() => [ID], { nullable: true })
  deletedById_in?: string[];

  @TypeGraphQLField({ nullable: true })
  createdByAccount_eq?: string;

  @TypeGraphQLField({ nullable: true })
  createdByAccount_contains?: string;

  @TypeGraphQLField({ nullable: true })
  createdByAccount_startsWith?: string;

  @TypeGraphQLField({ nullable: true })
  createdByAccount_endsWith?: string;

  @TypeGraphQLField(() => [String], { nullable: true })
  createdByAccount_in?: string[];

  @TypeGraphQLField(() => BigInt, { nullable: true })
  createdAtBlock_eq?: BN;

  @TypeGraphQLField(() => BigInt, { nullable: true })
  createdAtBlock_gt?: BN;

  @TypeGraphQLField(() => BigInt, { nullable: true })
  createdAtBlock_gte?: BN;

  @TypeGraphQLField(() => BigInt, { nullable: true })
  createdAtBlock_lt?: BN;

  @TypeGraphQLField(() => BigInt, { nullable: true })
  createdAtBlock_lte?: BN;

  @TypeGraphQLField(() => [BigInt], { nullable: true })
  createdAtBlock_in?: BN[];

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAtTime_eq?: DateTimeString;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAtTime_lt?: DateTimeString;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAtTime_lte?: DateTimeString;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAtTime_gt?: DateTimeString;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAtTime_gte?: DateTimeString;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdOnDay_eq?: DateTimeString;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdOnDay_lt?: DateTimeString;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdOnDay_lte?: DateTimeString;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdOnDay_gt?: DateTimeString;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdOnDay_gte?: DateTimeString;

  @TypeGraphQLField({ nullable: true })
  postId_eq?: string;

  @TypeGraphQLField({ nullable: true })
  postId_contains?: string;

  @TypeGraphQLField({ nullable: true })
  postId_startsWith?: string;

  @TypeGraphQLField({ nullable: true })
  postId_endsWith?: string;

  @TypeGraphQLField(() => [String], { nullable: true })
  postId_in?: string[];

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAtTime_eq?: DateTimeString;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAtTime_lt?: DateTimeString;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAtTime_lte?: DateTimeString;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAtTime_gt?: DateTimeString;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAtTime_gte?: DateTimeString;

  @TypeGraphQLField({ nullable: true })
  spaceId_eq?: string;

  @TypeGraphQLField({ nullable: true })
  spaceId_contains?: string;

  @TypeGraphQLField({ nullable: true })
  spaceId_startsWith?: string;

  @TypeGraphQLField({ nullable: true })
  spaceId_endsWith?: string;

  @TypeGraphQLField(() => [String], { nullable: true })
  spaceId_in?: string[];

  @TypeGraphQLField({ nullable: true })
  content_eq?: string;

  @TypeGraphQLField({ nullable: true })
  content_contains?: string;

  @TypeGraphQLField({ nullable: true })
  content_startsWith?: string;

  @TypeGraphQLField({ nullable: true })
  content_endsWith?: string;

  @TypeGraphQLField(() => [String], { nullable: true })
  content_in?: string[];

  @TypeGraphQLField(() => PostKind, { nullable: true })
  kind_eq?: PostKind;

  @TypeGraphQLField(() => [PostKind], { nullable: true })
  kind_in?: PostKind[];

  @TypeGraphQLField({ nullable: true })
  parentId_eq?: string;

  @TypeGraphQLField({ nullable: true })
  parentId_contains?: string;

  @TypeGraphQLField({ nullable: true })
  parentId_startsWith?: string;

  @TypeGraphQLField({ nullable: true })
  parentId_endsWith?: string;

  @TypeGraphQLField(() => [String], { nullable: true })
  parentId_in?: string[];

  @TypeGraphQLField({ nullable: true })
  rootPostId_eq?: string;

  @TypeGraphQLField({ nullable: true })
  rootPostId_contains?: string;

  @TypeGraphQLField({ nullable: true })
  rootPostId_startsWith?: string;

  @TypeGraphQLField({ nullable: true })
  rootPostId_endsWith?: string;

  @TypeGraphQLField(() => [String], { nullable: true })
  rootPostId_in?: string[];

  @TypeGraphQLField({ nullable: true })
  sharedPostId_eq?: string;

  @TypeGraphQLField({ nullable: true })
  sharedPostId_contains?: string;

  @TypeGraphQLField({ nullable: true })
  sharedPostId_startsWith?: string;

  @TypeGraphQLField({ nullable: true })
  sharedPostId_endsWith?: string;

  @TypeGraphQLField(() => [String], { nullable: true })
  sharedPostId_in?: string[];

  @TypeGraphQLField(() => Int, { nullable: true })
  repliesCount_eq?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  repliesCount_gt?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  repliesCount_gte?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  repliesCount_lt?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  repliesCount_lte?: number;

  @TypeGraphQLField(() => [Int], { nullable: true })
  repliesCount_in?: number[];

  @TypeGraphQLField(() => Int, { nullable: true })
  publicRepliesCount_eq?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  publicRepliesCount_gt?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  publicRepliesCount_gte?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  publicRepliesCount_lt?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  publicRepliesCount_lte?: number;

  @TypeGraphQLField(() => [Int], { nullable: true })
  publicRepliesCount_in?: number[];

  @TypeGraphQLField(() => Int, { nullable: true })
  hiddenRepliesCount_eq?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  hiddenRepliesCount_gt?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  hiddenRepliesCount_gte?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  hiddenRepliesCount_lt?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  hiddenRepliesCount_lte?: number;

  @TypeGraphQLField(() => [Int], { nullable: true })
  hiddenRepliesCount_in?: number[];

  @TypeGraphQLField(() => Int, { nullable: true })
  sharesCount_eq?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  sharesCount_gt?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  sharesCount_gte?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  sharesCount_lt?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  sharesCount_lte?: number;

  @TypeGraphQLField(() => [Int], { nullable: true })
  sharesCount_in?: number[];

  @TypeGraphQLField(() => Int, { nullable: true })
  upvotesCount_eq?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  upvotesCount_gt?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  upvotesCount_gte?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  upvotesCount_lt?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  upvotesCount_lte?: number;

  @TypeGraphQLField(() => [Int], { nullable: true })
  upvotesCount_in?: number[];

  @TypeGraphQLField(() => Int, { nullable: true })
  downvotesCount_eq?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  downvotesCount_gt?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  downvotesCount_gte?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  downvotesCount_lt?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  downvotesCount_lte?: number;

  @TypeGraphQLField(() => [Int], { nullable: true })
  downvotesCount_in?: number[];

  @TypeGraphQLField(() => Int, { nullable: true })
  score_eq?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  score_gt?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  score_gte?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  score_lt?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  score_lte?: number;

  @TypeGraphQLField(() => [Int], { nullable: true })
  score_in?: number[];

  @TypeGraphQLField({ nullable: true })
  title_eq?: string;

  @TypeGraphQLField({ nullable: true })
  title_contains?: string;

  @TypeGraphQLField({ nullable: true })
  title_startsWith?: string;

  @TypeGraphQLField({ nullable: true })
  title_endsWith?: string;

  @TypeGraphQLField(() => [String], { nullable: true })
  title_in?: string[];

  @TypeGraphQLField({ nullable: true })
  slug_eq?: string;

  @TypeGraphQLField({ nullable: true })
  slug_contains?: string;

  @TypeGraphQLField({ nullable: true })
  slug_startsWith?: string;

  @TypeGraphQLField({ nullable: true })
  slug_endsWith?: string;

  @TypeGraphQLField(() => [String], { nullable: true })
  slug_in?: string[];

  @TypeGraphQLField({ nullable: true })
  summary_eq?: string;

  @TypeGraphQLField({ nullable: true })
  summary_contains?: string;

  @TypeGraphQLField({ nullable: true })
  summary_startsWith?: string;

  @TypeGraphQLField({ nullable: true })
  summary_endsWith?: string;

  @TypeGraphQLField(() => [String], { nullable: true })
  summary_in?: string[];

  @TypeGraphQLField({ nullable: true })
  image_eq?: string;

  @TypeGraphQLField({ nullable: true })
  image_contains?: string;

  @TypeGraphQLField({ nullable: true })
  image_startsWith?: string;

  @TypeGraphQLField({ nullable: true })
  image_endsWith?: string;

  @TypeGraphQLField(() => [String], { nullable: true })
  image_in?: string[];

  @TypeGraphQLField({ nullable: true })
  canonical_eq?: string;

  @TypeGraphQLField({ nullable: true })
  canonical_contains?: string;

  @TypeGraphQLField({ nullable: true })
  canonical_startsWith?: string;

  @TypeGraphQLField({ nullable: true })
  canonical_endsWith?: string;

  @TypeGraphQLField(() => [String], { nullable: true })
  canonical_in?: string[];

  @TypeGraphQLField({ nullable: true })
  tagsOriginal_eq?: string;

  @TypeGraphQLField({ nullable: true })
  tagsOriginal_contains?: string;

  @TypeGraphQLField({ nullable: true })
  tagsOriginal_startsWith?: string;

  @TypeGraphQLField({ nullable: true })
  tagsOriginal_endsWith?: string;

  @TypeGraphQLField(() => [String], { nullable: true })
  tagsOriginal_in?: string[];

  @TypeGraphQLField(() => TagWhereInput, { nullable: true })
  tags_none?: TagWhereInput;

  @TypeGraphQLField(() => TagWhereInput, { nullable: true })
  tags_some?: TagWhereInput;

  @TypeGraphQLField(() => TagWhereInput, { nullable: true })
  tags_every?: TagWhereInput;

  @TypeGraphQLField(() => PostWhereInput, { nullable: true })
  AND?: [PostWhereInput];

  @TypeGraphQLField(() => PostWhereInput, { nullable: true })
  OR?: [PostWhereInput];
}

@TypeGraphQLInputType()
export class PostWhereUniqueInput {
  @TypeGraphQLField(() => ID)
  id?: string;
}

@TypeGraphQLInputType()
export class PostCreateInput {
  @TypeGraphQLField({ nullable: true })
  createdByAccount?: string;

  @TypeGraphQLField(() => BigInt, { nullable: true })
  createdAtBlock?: BN;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAtTime?: DateTimeString;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdOnDay?: DateTimeString;

  @TypeGraphQLField()
  postId!: string;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAtTime?: DateTimeString;

  @TypeGraphQLField()
  spaceId!: string;

  @TypeGraphQLField({ nullable: true })
  content?: string;

  @TypeGraphQLField(() => PostKind, { nullable: true })
  kind?: PostKind;

  @TypeGraphQLField({ nullable: true })
  parentId?: string;

  @TypeGraphQLField({ nullable: true })
  rootPostId?: string;

  @TypeGraphQLField({ nullable: true })
  sharedPostId?: string;

  @TypeGraphQLField({ nullable: true })
  repliesCount?: number;

  @TypeGraphQLField({ nullable: true })
  publicRepliesCount?: number;

  @TypeGraphQLField({ nullable: true })
  hiddenRepliesCount?: number;

  @TypeGraphQLField({ nullable: true })
  sharesCount?: number;

  @TypeGraphQLField({ nullable: true })
  upvotesCount?: number;

  @TypeGraphQLField({ nullable: true })
  downvotesCount?: number;

  @TypeGraphQLField({ nullable: true })
  score?: number;

  @TypeGraphQLField({ nullable: true })
  title?: string;

  @TypeGraphQLField({ nullable: true })
  slug?: string;

  @TypeGraphQLField({ nullable: true })
  summary?: string;

  @TypeGraphQLField({ nullable: true })
  image?: string;

  @TypeGraphQLField({ nullable: true })
  canonical?: string;

  @TypeGraphQLField({ nullable: true })
  tagsOriginal?: string;
}

@TypeGraphQLInputType()
export class PostUpdateInput {
  @TypeGraphQLField({ nullable: true })
  createdByAccount?: string;

  @TypeGraphQLField(() => BigInt, { nullable: true })
  createdAtBlock?: BN;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAtTime?: DateTimeString;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdOnDay?: DateTimeString;

  @TypeGraphQLField({ nullable: true })
  postId?: string;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAtTime?: DateTimeString;

  @TypeGraphQLField({ nullable: true })
  spaceId?: string;

  @TypeGraphQLField({ nullable: true })
  content?: string;

  @TypeGraphQLField(() => PostKind, { nullable: true })
  kind?: PostKind;

  @TypeGraphQLField({ nullable: true })
  parentId?: string;

  @TypeGraphQLField({ nullable: true })
  rootPostId?: string;

  @TypeGraphQLField({ nullable: true })
  sharedPostId?: string;

  @TypeGraphQLField({ nullable: true })
  repliesCount?: number;

  @TypeGraphQLField({ nullable: true })
  publicRepliesCount?: number;

  @TypeGraphQLField({ nullable: true })
  hiddenRepliesCount?: number;

  @TypeGraphQLField({ nullable: true })
  sharesCount?: number;

  @TypeGraphQLField({ nullable: true })
  upvotesCount?: number;

  @TypeGraphQLField({ nullable: true })
  downvotesCount?: number;

  @TypeGraphQLField({ nullable: true })
  score?: number;

  @TypeGraphQLField({ nullable: true })
  title?: string;

  @TypeGraphQLField({ nullable: true })
  slug?: string;

  @TypeGraphQLField({ nullable: true })
  summary?: string;

  @TypeGraphQLField({ nullable: true })
  image?: string;

  @TypeGraphQLField({ nullable: true })
  canonical?: string;

  @TypeGraphQLField({ nullable: true })
  tagsOriginal?: string;
}

@ArgsType()
export class PostWhereArgs extends PaginationArgs {
  @TypeGraphQLField(() => PostWhereInput, { nullable: true })
  where?: PostWhereInput;

  @TypeGraphQLField(() => PostOrderByEnum, { nullable: true })
  orderBy?: PostOrderByEnum[];
}

@ArgsType()
export class PostCreateManyArgs {
  @TypeGraphQLField(() => [PostCreateInput])
  data!: PostCreateInput[];
}

@ArgsType()
export class PostUpdateArgs {
  @TypeGraphQLField() data!: PostUpdateInput;
  @TypeGraphQLField() where!: PostWhereUniqueInput;
}
